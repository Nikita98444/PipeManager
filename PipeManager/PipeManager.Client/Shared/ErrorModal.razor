@if (Show)
{
    <div class="modal-backdrop fade show"
         style="position:fixed; inset:0; z-index:1050;"></div>

    <div style="
         position:fixed; inset:0; display:flex;
         justify-content:center; align-items:center; z-index:1060;">
        <!-- перенесли scrollable сюда -->
        <div class="modal-dialog modal-dialog-scrollable"
             style="width:90%; max-width:800px; margin:0;">
            <div class="modal-content shadow-lg"
                 style="
                     display:flex;
                     flex-direction:column;
                     max-height:80vh;          /* ограничиваем общую высоту */
                     border-radius:0.75rem;
                     background:#fff;">
                <!-- HEADER -->
                <div class="modal-header ps-4 pe-3 py-3 border-0">
                    <h4 class="modal-title fw-semibold m-0">@Title</h4>
                    <button type="button" class="btn-close"
                            aria-label="Close"
                            @onclick="OnCloseRequested"></button>
                </div>

                <!-- BODY: scroll внутри, flex-рост -->
                <div class="modal-body overflow-auto fs-5 px-4 py-3"
                     style="flex:1 1 auto;">
                    <p class="mb-0 white-space-pre-line">@Message</p>
                </div>

                <!-- FOOTER -->
                <div class="modal-footer border-0 pt-0 pb-4 px-4">
                    <button class="btn btn-secondary btn-lg px-4"
                            @onclick="OnCloseRequested">
                        Закрыть
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public bool Show { get; set; }    
    [Parameter] public string? Message { get; set; }          
    [Parameter] public string Title { get; set; } = "Ошибка";
    [Parameter] public EventCallback OnClose { get; set; }       

    private async Task OnCloseRequested()
        => await OnClose.InvokeAsync(null);       
}
